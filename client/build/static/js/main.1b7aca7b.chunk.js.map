{"version":3,"sources":["utils/api.js","utils/helpers.js","actions/post.js","actions/category.js","actions/postDetail.js","actions/comment.js","reducers/index.js","reducers/post.js","reducers/category.js","reducers/postDetail.js","reducers/comment.js","components/PostEditModal.js","components/Post.js","components/Category.js","components/Dashboard.js","components/CommentDetail.js","components/Comment.js","components/NotFound.js","components/PostDetail.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["api","process","PORT","token","localStorage","Math","random","toString","substr","headers","uuidv4","replace","c","r","RECEIVE_POSTS","ADD_POST","DELETE_POST","EDIT_POST","VOTE_POST","CATEGORY_POSTS","receivePostData","dispatch","fetch","then","res","json","data","catch","err","posts","type","receivePost","addPostData","title","body","author","category","post","id","timestamp","Date","now","postFormat","method","JSON","stringify","alert","addPost","editPostData","index","editPostAPI","editPost","votePostData","option","votingAPI","votePost","deletePostData","postId","deletePostAPI","deletePost","categoryPostsData","getPostCategoryAPI","categoryPosts","GET_CATEGORY","getCategoryData","categories","getCategory","POST_DETAIL","postDetailData","postDetailAPI","postDetail","GET_COMMENTS","ADD_COMMENT","VOTE_COMMENT","EDIT_COMMENT","DELETE_COMMENT","receiveCommentsData","comments","getCommentsAPI","receiveComments","addCommentData","parentId","comment","commentFormat","addComment","voteCommentData","commentId","voteCommentAPI","voteComment","editCommentData","editCommentAPI","editComment","deleteCommentData","deleteCommentAPI","deleteComment","combineReducers","state","action","Object","keys","length","deleted","connect","props","useState","values","setValues","handleInputChange","e","persist","target","name","value","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Form","onSubmit","preventDefault","onHide","Group","controlId","Label","Control","placeholder","onChange","required","disabled","as","rows","Button","variant","onClick","Footer","modalShow","setModalShow","Card","className","style","Badge","margin","Subtitle","to","marginTop","color","marginBottom","fontSize","voteScore","marginLeft","commentCount","show","postIds","sort","a","b","useEffect","map","useParams","setSort","DropdownButton","ButtonGroup","Dropdown","Item","eventKey","onSelect","width","height","toggleEditComment","setToggleEditComment","setBody","handleDelete","handleUpVote","handleDownVote","InputGroup","FormControl","aria-label","aria-describedby","Append","commentIds","NotFound","withRouter","Nav","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wOAEMA,GADKC,mIAAYC,KACb,IAENC,EAAOC,aAAaD,MAEpBA,IACAA,EAAMC,aAAaD,MAAME,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAIhE,IAAMC,EAAQ,CACVA,QAAQ,CACJ,OAAU,mBACV,cAAgBN,ICZxB,SAASO,IACL,MAAO,uCAAuCC,QAAQ,SAAS,SAASC,GACtE,IAAIC,EAAoB,GAAhBR,KAAKC,SAAgB,EAC7B,OAD0C,MAANM,EAAYC,EAAS,EAAJA,EAAU,GACtDN,SAAS,OAKjB,ICFMO,EAAc,gBACdC,EAAW,WACXC,EAAY,cACZC,EAAU,YACVC,EAAU,YACVC,EAAe,iBAmDrB,SAASC,IACZ,OAAO,SAACC,GF/CeC,MAAM,SAASb,GACrBc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAEA,KACXC,OAAM,SAAAC,GAAG,OAAEA,KE8CvBL,MAAK,SAACM,GAAUR,EAnDzB,SAAqBQ,GACjB,MAAM,CACFC,KAAKhB,EACLe,SAgD0BE,CAAYF,QAKvC,SAASG,EAAYC,EAAMC,EAAKC,EAAOC,GAC1C,OAAO,SAACf,GF7Ce,IAACgB,KClBJ,SAACJ,EAAMC,EAAKC,EAAOC,GAMvC,MAAO,CACHE,GALK5B,IAML6B,UALWC,KAAKC,MAMhBR,QACAC,OACAC,SACAC,YCoDcM,CAAWT,EAAMC,EAAKC,EAAOC,GF9ChBd,MAAM,GAAD,OAAItB,EAAJ,UACpC,CAAG2C,OAAO,OACNlC,QAAQ,CACR,cAAgBN,EAChB,eAAgB,oBAEhB+B,KAAKU,KAAKC,UAAUR,KAE1Bd,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAc,GAAI,OAAEA,KACXV,OAAM,SAAAC,GAAG,OAAEkB,MAAM,oBAAoBlB,OEqC9BL,MAAK,SAACc,GAAQhB,EApDvB,SAAiBgB,GACb,MAAM,CACFP,KAAKf,EACLsB,QAiDwBU,CAAQV,QAKjC,SAASW,EAAaX,EAAKY,GAC9B,OAAO,SAAC5B,IFzCc,SAACgB,GAAD,OAAQf,MAAM,GAAD,OAAItB,EAAJ,kBAAiBqC,EAAKC,IAC5D,CAAGK,OAAO,MACNlC,QAAQ,CACR,cAAgBN,EAChB,eAAgB,oBAEhB+B,KAAKU,KAAKC,UAAUR,KAEvBd,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACfF,MAAK,SAAAc,GAAI,OAAEA,KACXV,OAAM,SAAAC,GAAG,OAAEkB,MAAM,oBAAoBlB,OEgC9BsB,CAAYb,GACXd,MAAK,SAACc,GAAShB,EArDxB,SAAkBgB,EAAKY,GACnB,MAAM,CACFnB,KAAKb,EACLgC,QACAZ,QAiDyBc,CAASd,EAAKY,QAKxC,SAASG,EAAaH,EAAMI,EAAOhB,GACtC,OAAO,SAAChB,IFrCW,SAACgC,EAAOhB,GAAR,OAAef,MAAM,GAAD,OAAItB,EAAJ,kBAAiBqC,EAAKC,IAChE,CAAGK,OAAO,OACNlC,QAAQ,CACR,cAAgBN,EAChB,eAAgB,oBAEhB+B,KAAKU,KAAKC,UAAUQ,KAEvB9B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACfF,MAAK,SAAAc,GAAI,OAAEA,KACXV,OAAM,SAAAC,GAAG,OAAEkB,MAAM,oBAAoBlB,OE4B9B0B,CAAUD,EAAOhB,GAChBd,MAAK,SAACc,GACHhB,EAtDZ,SAAkB4B,EAAMZ,GACpB,MAAM,CACFP,KAAKZ,EACL+B,QACAZ,QAkDakB,CAASN,EAAMZ,QAK7B,SAASmB,EAAeC,EAAOR,GAClC,OAAO,SAAC5B,IFlCgB,SAACoC,GAAD,OAAUnC,MAAM,GAAD,OAAItB,EAAJ,kBAAiByD,GAC3D,CAAGd,OAAO,SACNlC,QAAQ,CACR,cAAgBN,EAChB,eAAgB,sBAGnBoB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACfF,MAAK,SAAAc,GAAI,OAAEA,KACXV,OAAM,SAAAC,GAAG,OAAEkB,MAAM,oBAAoBlB,OE0B9B8B,CAAcD,GACblC,MAAK,SAACc,GAAShB,EApDxB,SAAoBgB,EAAKY,GACrB,MAAM,CACFnB,KAAKd,EACLqB,OACAY,SAgDyBU,CAAWtB,EAAKY,QAK1C,SAASW,EAAkBxB,GAC9B,OAAO,SAACf,IF/BqB,SAACe,GAAD,OAAYd,MAAM,GAAD,OAAItB,EAAJ,YAAWoC,EAAX,UAA4B3B,GACzDc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAEA,KACXC,OAAM,SAAAC,GAAG,OAAEA,ME6BxBiC,CAAmBzB,GAClBb,MAAK,SAACM,GACHR,EArDZ,SAAuBQ,GACnB,MAAM,CACFC,KAAKX,EACLU,SAkDaiC,CAAcjC,QC5G5B,IAAMkC,EAAa,eAYnB,SAASC,IACZ,OAAO,SAAC3C,GHSoBC,MAAM,GAAD,OAAItB,EAAJ,eAAqBS,GACrBc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA0C,GAAU,OAAEA,KACjBtC,OAAM,SAAAC,GAAG,OAAEA,KGVpCL,MAAK,SAAA0C,GAAa5C,EAX9B,SAAqB4C,GACjB,MAAM,CACFnC,KAAKiC,EACLE,cAQ+BC,CAAYD,QCd5C,IAAME,EAAY,cAWlB,SAASC,EAAeX,GAC3B,OAAO,SAACpC,IJmEe,SAACoC,GAAD,OAAUnC,MAAM,GAAD,OAAItB,EAAJ,kBAAiByD,GAAShD,GAC/Cc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAc,GAAI,OAAEA,KACXV,OAAM,SAAAC,GAAG,OAAEA,MIrExByC,CAAcZ,GACblC,MAAK,SAACc,GAAQhB,EAVvB,SAAoBgB,GAChB,MAAM,CACFP,KAAKqC,EACL9B,QAOwBiC,CAAWjC,OAClCV,OAAM,SAAAC,GAAG,OAAEA,MCdb,IAAM2C,EAAa,eACbC,EAAY,cACZC,EAAa,eACbC,EAAa,eACbC,EAAe,iBAyCrB,SAASC,EAAoBnB,GAChC,OAAO,SAACpC,ILqCgB,SAACoC,GAAD,OAAUnC,MAAM,GAAD,OAAItB,EAAJ,kBAAiByD,EAAjB,aAAmChD,GAC7Cc,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAsD,GAAQ,OAAEA,KACflD,OAAM,SAAAC,GAAG,OAAEA,MKvCpCkD,CAAerB,GACdlC,MAAK,SAACsD,GAAYxD,EAzC3B,SAAyBwD,GACrB,MAAM,CACF/C,KAAKyC,EACLM,YAsC4BE,CAAgBF,QAI7C,SAASG,EAAe9C,EAAKC,EAAO8C,GACvC,OAAO,SAAC5D,GLqCkB,IAAC6D,KClEJ,SAAChD,EAAKC,EAAO8C,GAKtC,MAAM,CACJ3C,GAJO5B,IAKP6B,UAJcC,KAAKC,MAKnBP,OACAC,SACA8C,YIoBqBE,CAAcjD,EAAKC,EAAO8C,GLoCV3D,MAAM,GAAD,OAAItB,EAAJ,aAAmB,CAC7D2C,OAAO,OACPlC,QAAQ,CACJ,cAAgBN,EAChB,eAAgB,oBAEpB+B,KAAKU,KAAKC,UAAUqC,KACrB3D,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA2D,GAAO,OAAEA,KACdvD,OAAM,SAAAC,GAAG,OAAEA,MK5CLL,MAAK,SAAC2D,GAAW7D,EAzC1B,SAAoB6D,GAChB,MAAM,CACFpD,KAAK0C,EACLU,WAsC2BE,CAAWF,QAIvC,SAASG,EAAgBpC,EAAMI,EAAOiC,GACzC,OAAM,SAACjE,ILsDiB,SAACgC,EAAOiC,GAAR,OAAoBhE,MAAM,GAAD,OAAItB,EAAJ,qBAAoBsF,GAAY,CACjF3C,OAAO,OACPlC,QAAQ,CACJ,cAAgBN,EAChB,eAAgB,oBAEpB+B,KAAKU,KAAKC,UAAUQ,KACrB9B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA2D,GAAO,OAAEA,KACdvD,OAAM,SAAAC,GAAG,OAAEA,MK9DN2D,CAAelC,EAAOiC,GACrB/D,MAAK,SAAC2D,GAAW7D,EAzC1B,SAAqB4B,EAAMiC,GACvB,MAAM,CACFpD,KAAK2C,EACLxB,QACAiC,WAqC2BM,CAAYvC,EAAMiC,QAI9C,SAASO,EAAgBxC,EAAMiC,EAAQI,GAC1C,OAAO,SAACjE,IL4DgB,SAAC6D,EAAQI,GAAT,OAAqBhE,MAAM,GAAD,OAAItB,EAAJ,qBAAoBsF,GAAY,CAClF3C,OAAO,MACPlC,QAAQ,CACJ,cAAgBN,EAChB,eAAgB,oBAEpB+B,KAAKU,KAAKC,UAAUqC,KACrB3D,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA2D,GAAO,OAAEA,KACdvD,OAAM,SAAAC,GAAG,OAAEA,MKpEN8D,CAAeR,EAAQI,GACtB/D,MAAK,SAAC2D,GAAY7D,EAzC3B,SAAqB4B,EAAMiC,GACvB,MAAM,CACFpD,KAAK4C,EACLzB,QACAiC,WAqC4BS,CAAY1C,EAAMiC,QAK/C,SAASU,EAAkB3C,EAAMqC,GACpC,OAAO,SAACjE,IL2BkB,SAACiE,GAAD,OAAahE,MAAM,GAAD,OAAItB,EAAJ,qBAAoBsF,GAAY,CAC5E3C,OAAO,SACPlC,QAAQ,CACJ,cAAgBN,EAChB,eAAgB,sBAErBoB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA2D,GAAO,OAAEA,KACdvD,OAAM,SAAAC,GAAG,OAAEA,MKlCNiE,CAAiBP,GAChB/D,MAAK,SAAC2D,GAAW7D,EAzC1B,SAAuB4B,EAAMiC,GACzB,MAAM,CACFpD,KAAK6C,EACL1B,QACAiC,WAqC2BY,CAAc7C,EAAMiC,QCxExCa,kBAAgB,CAC3BlE,MCNW,WAAgC,IAAjBmE,EAAgB,uDAAV,GAAGC,EAAO,uCAC1C,OAAOA,EAAOnE,MACV,KAAKhB,EACD,sBACOmF,EAAOpE,OAElB,KAAKd,EACD,IAAIkC,EAAMiD,OAAOC,KAAKH,GAAOI,OAC7B,OAAO,2BACAJ,GADP,kBAEK/C,EAFL,eAGWgD,EAAO5D,QAGtB,KAAKnB,EAOL,KAAKD,EACD,kCACO+E,GADP,kBAEKC,EAAOhD,MAFZ,eAGWgD,EAAO5D,QAGtB,KAAKrB,EACD,kCACOgF,GADP,kBAEKC,EAAOhD,MAFZ,2BAGWgD,EAAO5D,MAHlB,IAIQgE,SAAQ,MAGpB,KAAKlF,EACD,sBACO8E,EAAOpE,OAGlB,QACI,OAAOmE,IDnCf/B,WEPY,WAAqC,IAAjB+B,EAAgB,uDAAV,GAAGC,EAAO,uCAChD,OAAOA,EAAOnE,MACV,KAAKiC,EACD,sBACOkC,EAAOhC,YAElB,QACI,OAAO+B,IFCf1B,WGTW,WAAqC,IAAjB0B,EAAgB,uDAAV,GAAGC,EAAO,uCAC/C,OAAOA,EAAOnE,MACV,KAAKqC,EACD,sBACO8B,EAAO5D,MAElB,QACI,OAAO2D,IHGfnB,SIVW,WAAoC,IAAjBmB,EAAgB,uDAAV,GAAGC,EAAO,uCAE9C,OAAOA,EAAOnE,MACV,KAAKyC,EACD,sBACO0B,EAAOpB,UAElB,KAAKL,EACD,IAAIvB,EAAMiD,OAAOC,KAAKH,GAAOI,OAC7B,kCACOJ,GADP,kBAEK/C,EAFL,eAGWgD,EAAOf,WAItB,KAAKT,EAOL,KAAKC,EAOL,KAAKC,EACD,kCACOqB,GADP,kBAEKC,EAAOhD,MAFZ,eAGWgD,EAAOf,WAGtB,QACI,OAAOc,M,wFC6EJM,sBA9Gf,SAAuBC,GAAQ,IACpBlE,EAAqBkE,EAArBlE,KAAKY,EAAgBsD,EAAhBtD,MAAM5B,EAAUkF,EAAVlF,SADQ,EAEEmF,mBAAS,CACjCvE,MAAOI,EAAKA,EAAKJ,MAAM,GACvBC,KAAMG,EAAKA,EAAKH,KAAK,GACrBC,OAAQE,EAAKA,EAAKF,OAAO,GACzBC,SAAUC,EAAKA,EAAKD,SAAS,UANP,mBAEnBqE,EAFmB,KAEXC,EAFW,KASpBC,EAAoB,SAACC,GACvBA,EAAEC,UAD2B,MAELD,EAAEE,OAAlBC,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,MACdN,EAAU,2BAAKD,GAAN,kBAAeM,EAAOC,MAsBnC,OACI,eAACC,EAAA,EAAD,2BACQV,GADR,IAEIW,kBAAgB,gCAChBC,UAAQ,EAHZ,UAKI,cAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACJ,EAAA,EAAMK,MAAP,CAAahF,GAAG,gCAAhB,SACKD,GAAMA,EAAKC,GAAK,YAAc,gBAGvC,cAAC2E,EAAA,EAAMM,KAAP,UACI,eAACC,EAAA,EAAD,CAAMC,SA/BC,SAACb,GAChBA,EAAEc,iBADkB,IAEbzF,EAA4BwE,EAA5BxE,MAAMC,EAAsBuE,EAAtBvE,KAAKC,EAAiBsE,EAAjBtE,OAAOC,EAAUqE,EAAVrE,SAErBf,EADDgB,EACUW,EAAa,2BAAIX,GAAL,IAAUH,SAAMe,GAG5BjB,EAAYC,EAAMC,EAAKC,EAAOC,IAG3CsE,EAAU,CACNzE,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,SAAU,UAEdmE,EAAMoB,UAeE,UACI,eAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACL,EAAA,EAAKM,MAAN,yBACA,cAACN,EAAA,EAAKO,QAAN,CACIjG,KAAK,OACLiF,KAAK,QACLC,MAAOP,EAAOxE,MACd+F,YAAY,QACZC,SAAUtB,EACVuB,UAAQ,EACRC,SAAU9F,OAGlB,eAACmF,EAAA,EAAKI,MAAN,CAAYC,UAAU,+BAAtB,UACI,cAACL,EAAA,EAAKM,MAAN,wBACA,cAACN,EAAA,EAAKO,QAAN,CACIhB,KAAK,OACLC,MAAOP,EAAOvE,KACdkG,GAAG,WACHC,KAAM,EACNJ,SAAUtB,EACVuB,UAAQ,OAGhB,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACL,EAAA,EAAKM,MAAN,0BACA,cAACN,EAAA,EAAKO,QAAN,CACIjG,KAAK,OACLiF,KAAK,SACLC,MAAOP,EAAOtE,OACd6F,YAAY,UACZC,SAAUtB,EACVuB,UAAQ,EACRC,SAAU9F,OAGlB,eAACmF,EAAA,EAAKI,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACL,EAAA,EAAKM,MAAN,8BACA,eAACN,EAAA,EAAKO,QAAN,CACIhB,KAAK,WACLC,MAAOP,EAAOrE,SACdgG,GAAG,SACHH,SAAUtB,EACVuB,UAAQ,EACRC,SAAU9F,EANd,UAQI,2CACA,2CACA,mDAGR,cAACiG,EAAA,EAAD,CAAQC,QAAQ,UAAUzG,KAAK,SAA/B,kBAGA,cAACwG,EAAA,EAAD,CAAQE,QAASjC,EAAMoB,OAAQY,QAAQ,YAAvC,wBAGR,cAACtB,EAAA,EAAMwB,OAAP,W,2BCPGnC,oBARf,cAAiD,IAAtBzE,EAAqB,EAArBA,MAAW4B,EAAU,EAAVA,OAElC,MAAO,CACHR,MAAOQ,EACPpB,KAHSR,EAAQA,EAAM4B,GAAU,QAO1B6C,EA5Ff,YAA0C,IAA1BjE,EAAyB,EAAzBA,KAAMhB,EAAmB,EAAnBA,SAAU4B,EAAS,EAATA,MAAS,EACHuD,oBAAS,GADN,mBAC9BkC,EAD8B,KACnBC,EADmB,KAcrC,OAAItG,IAAyB,IAAjBA,EAAKgE,QAET,qCACI,cAACuC,GAAA,EAAD,CAAMC,UAAU,gBAAgBC,MAAO,GAAvC,SAEI,eAACF,GAAA,EAAKrB,KAAN,WAEI,eAACqB,GAAA,EAAKtB,MAAN,eAAcjF,EAAOA,EAAKJ,MAAQ,KAC9B,gCACI,wBAAQuG,QAAS,kBAAMG,GAAa,IAAOE,UAAU,SAArD,SACI,eAACE,EAAA,EAAD,CAAOR,QAAQ,UAAUO,MAAO,CAAEE,OAAQ,GAA1C,kBACS,cAAC,KAAD,SAGb,wBAAQR,QAzBf,WACjBnH,EAASmC,EAAenB,EAAKC,GAAIW,KAwBsB4F,UAAU,SAAzC,SACI,eAACE,EAAA,EAAD,CAAOR,QAAQ,SAASO,MAAO,CAAEE,OAAQ,GAAzC,oBACW,cAAC,KAAD,eAMvB,eAACJ,GAAA,EAAKK,SAAN,sBAAwB5G,EAAOA,EAAKF,OAAS,QAE7C,8BACI,cAAC4G,EAAA,EAAD,CAAOR,QAAQ,UAAf,SAA0BlG,EAAOA,EAAKD,SAAW,SAGrD,cAAC,IAAD,CAAM8G,GAAE,WAAM7G,EAAKD,SAAX,YAAuBC,EAAKC,IAAMuG,UAAU,OAApD,SACKxG,EAAOA,EAAKH,KAAO,OAGxB,sBAAK4G,MAAO,CAAEK,UAAW,IAAzB,UACI,sBAAMN,UAAU,YAAhB,SACI,cAAC,IAAD,CAAUC,MAAO,CAAEM,MAAO,QAASC,cAAe,GAAIC,SAAU,IAAMd,QAzC7E,WACjBnH,EAAS+B,EAAaH,EAAO,CAAEI,OAAQ,UAAYhB,SA0C/B,gCAAMA,EAAOA,EAAKkH,UAAY,KAC1B,sBAAMT,MAAO,CAAEU,WAAY,EAAGF,SAAU,IAAxC,sBAEJ,sBAAMT,UAAU,YAAhB,SACA,cAAC,IAAD,CAAYC,MAAO,CAAEM,MAAO,MAAOD,WAAY,GAAIG,SAAU,IAAOd,QA5CrE,WACnBnH,EAAS+B,EAAaH,EAAO,CAAEI,OAAQ,YAAchB,YA+CrC,yBAAQwG,UAAU,oBAAoBC,MAAO,CAAEK,UAAW,GAA1D,UACY,KACR,cAAC,IAAD,CAAMD,GAAE,WAAM7G,EAAKD,SAAX,YAAuBC,EAAKC,IAAMuG,UAAU,OAApD,SACI,8BAAIxG,EAAOA,EAAKoH,aAAe,KAA/B,yBAQhB,cAAC,GAAD,CACIC,KAAMhB,EACNf,OAAQ,kBAAMgB,GAAa,IAC3BtG,KAAMA,GAAc,KACpBY,MAAOA,OAMZ,QC7CAqD,oBAff,cAA0C,IAAhBzE,EAAe,EAAfA,MAStB,MAAO,CACH8H,QARM,eAF2B,EAAPC,KAGjB1D,OAAOC,KAAKtE,GACpB+H,MAAK,SAACC,EAAEC,GAAH,OAAOjI,EAAMiI,GAAGP,UAAU1H,EAAMgI,GAAGN,aAElCrD,OAAOC,KAAKtE,GACpB+H,MAAK,SAACC,EAAEC,GAAH,OAAOjI,EAAMiI,GAAGvH,UAAYV,EAAMgI,GAAGtH,gBAQlC+D,EAvCf,YAA+C,IAA5BjF,EAA2B,EAA3BA,SAASe,EAAkB,EAAlBA,SAASuH,EAAS,EAATA,QAUjC,OARAI,qBAAU,WAEN1I,EADGe,EACMwB,EAAkBxB,GAEdhB,OAEf,CAACgB,EAASf,IAGR,oBAAIwH,UAAU,eAAd,SACCc,EAAQK,KAAI,SAACvG,GACV,OACI,6BACI,cAAC,GAAD,CAAMA,OAAQA,KADTA,WCoEV6C,oBAPf,YAAiD,IAAtBzE,EAAqB,EAArBA,MACvB,MAAO,CACHoC,WAFwC,EAAdA,WAG1BpC,WAIOyE,EA/Ef,YAAkC,IAAdrC,EAAa,EAAbA,WAAa,EAEKuC,oBAAS,GAFd,mBAEtBkC,EAFsB,KAEXC,EAFW,KAGtBvG,EAAU6H,cAAV7H,SAHsB,EAIRoE,mBAAS,QAJD,mBAItBoD,EAJsB,KAIjBM,EAJiB,KAO7B,OACI,sBAAKrB,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,eAACsB,EAAA,EAAD,CAAgB7H,GAAG,uBACd8F,GAAIgC,IACLnI,MAAK,mBAAcG,GAAkB,OAFzC,UAII,cAACiI,EAAA,EAASC,KAAV,CAAgBC,SAAS,MAAzB,SACI,cAAC,IAAD,CAAMrB,GAAG,IAAIL,UAAU,OAAvB,mBAIH5E,GAAcA,EAAWA,WAAaA,EAAWA,WAAW+F,KAAI,SAAC5H,GAC9D,OACI,cAAC,IAAD,CAAM8G,GAAE,WAAM9G,EAAS2E,MAAQ8B,UAAU,OAAzC,SACA,cAACwB,EAAA,EAASC,KAAV,CAEIlC,GAAG,SACHmC,SAAUnI,EAAS2E,KAHvB,SAMS3E,EAAS2E,QAPmC3E,EAAS2E,SAYjE,QAIT,eAACoD,EAAA,EAAD,CACI7H,GAAG,uBACHuG,UAAU,gBACV5G,MAAK,kBAAa2H,GAClBY,SAAU,SAAC5D,GAAD,OAAKsD,EAAQtD,IAJ3B,UAMI,cAACyD,EAAA,EAASC,KAAV,CAAelC,GAAG,SAASmC,SAAS,OAApC,kBACA,cAACF,EAAA,EAASC,KAAV,CAAelC,GAAG,SAASmC,SAAS,aAApC,8BAGR,wBAAQ/B,QAAS,kBAAMG,GAAa,IAAOE,UAAU,UAArD,SACI,eAACE,EAAA,EAAD,CACAR,QAAQ,UACRO,MAAO,CACFE,OAAQ,EACRyB,MAAM,IACNC,OAAO,GACPpB,SAAS,IANd,wBAQe,cAAC,IAAD,SAGnB,cAAC,GAAD,CACAI,KAAMhB,EACNf,OAAQ,kBAAIgB,GAAa,MAEzB,cAAC,GAAD,CACAvG,SAAUA,EACVwH,KAAMA,U,wBCqBHtD,sBArFf,YAAsD,IAA7BrD,EAA4B,EAA5BA,MAAOiC,EAAqB,EAArBA,QAAS7D,EAAY,EAAZA,SAAY,EAECmF,oBAAS,GAFV,mBAE1CmE,EAF0C,KAEvBC,EAFuB,OAGzBpE,mBAAStB,EAAQhD,MAHQ,mBAG1CA,EAH0C,KAGpC2I,EAHoC,KA6BjD,OACI,eAACjC,GAAA,EAAKrB,KAAN,WACI,eAACqB,GAAA,EAAKK,SAAN,yBACgB/D,EAAQ/C,OACpB,+BACI,wBAAQqG,QAAS,kBAAMoC,GAAqB,IAAO/B,UAAU,SAA7D,SAAsE,cAAC,KAAD,QAE1E,+BACI,wBAAQL,QAAS,kBAZZ,SAACvF,EAAOqC,GACzBjE,EAASuE,EAAkB3C,EAAOqC,IAWCwF,CAAa7H,EAAOiC,EAAQ5C,KAAKuG,UAAU,SAAlE,SAA2E,cAAC,KAAD,WAGnF,sBAAKA,UAAU,mBAAf,UACI,gCACI,sBAAMA,UAAU,YAAhB,SACI,cAAC,IAAD,CACIC,MAAO,CAAEM,MAAO,QAASC,cAAe,IACxCb,QAAS,YA5BZ,SAACvF,EAAOqC,GACzBjE,EAASgE,EAAgBpC,EAAO,CAAEI,OAAQ,UAAYiC,IA2BjByF,CAAa9H,EAAOiC,EAAQ5C,SAGrD,gCAAM4C,EAAQqE,UACV,sBAAMT,MAAO,CAAEU,WAAY,EAAGF,SAAU,IAAxC,sBAEJ,sBAAMT,UAAU,YAAhB,SACI,cAAC,IAAD,CACIC,MAAO,CAAEM,MAAO,MAAOD,WAAY,IACnCX,QAAS,YAjCV,SAACvF,EAAOqC,GAC3BjE,EAASgE,EAAgBpC,EAAO,CAAEI,OAAQ,YAAciC,IAgCnB0F,CAAe/H,EAAOiC,EAAQ5C,YAI3D,qBAAKuG,UAAW8B,EAAoB,GAAK,gBAAzC,SACI,4BACKA,EACG,cAACnD,EAAA,EAAD,CAAMC,SAlDL,SAACb,GACtBA,EAAEc,iBACFrG,EAASoE,EAAgBxC,EAAD,YAAC,eAAYiC,GAAb,IAAsBhD,SAAQgD,EAAQ5C,KAC9DsI,GAAqB,IA+CiC/B,UAAU,kBAA5C,SACI,eAACoC,GAAA,EAAD,CAAYpC,UAAU,OAAtB,UACI,cAACqC,GAAA,EAAD,CACIlD,YAAY,oBACZmD,aAAW,oBACXC,mBAAiB,eACjBpE,MAAO9E,EACP+F,SA9Df,SAACrB,GAClBA,EAAEC,UACFgE,EAAQjE,EAAEE,OAAOE,UA8DW,eAACiE,GAAA,EAAWI,OAAZ,WACI,cAAC/C,EAAA,EAAD,CAAQC,QAAQ,oBAAoBzG,KAAK,SAAzC,kBACA,cAACwG,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAAS,kBAAMoC,GAAqB,IAAxE,4BAIZ1F,EAAQhD,cA9CZgD,EAAQ5C,OCiCjBgE,oBAVf,cAA0D,IAA/BzB,EAA8B,EAA9BA,SAAYI,EAAkB,EAAlBA,SAEnC,MAAO,CACH9C,OAHiD,EAATA,OAIxC8C,WACAqG,WAJapF,OAAOC,KAAKtB,GAKzBA,cAIOyB,EAjEf,YAAoE,IAAlDnE,EAAiD,EAAjDA,OAAO8C,EAA0C,EAA1CA,SAAUJ,EAAgC,EAAhCA,SAASyG,EAAuB,EAAvBA,WAAWjK,EAAY,EAAZA,SAAY,EAE1CmF,mBAAS,IAFiC,mBAExDtE,EAFwD,KAEnD2I,EAFmD,KAe/D,OACI,eAACjC,GAAA,EAAD,CAAMC,UAAU,mBAAhB,UACI,cAACD,GAAA,EAAKtB,MAAN,CAAYwB,MAAO,CAACE,OAAO,GAA3B,uBACA,cAACxB,EAAA,EAAD,CAAMC,SARK,SAACb,GAChBA,EAAEc,iBACFrG,EAAS2D,EAAe9C,EAAKC,EAAO8C,IACpC4F,EAAQ,KAK0BhC,UAAU,iBAAxC,SACI,eAACoC,GAAA,EAAD,CAAYpC,UAAU,OAAtB,UACI,cAACqC,GAAA,EAAD,CACIlD,YAAY,mBACZmD,aAAW,mBACXC,mBAAiB,eACjBpE,MAAO9E,EACP+F,SApBD,SAACrB,GAChBA,EAAEC,UACFgE,EAAQjE,EAAEE,OAAOE,UAoBL,cAACiE,GAAA,EAAWI,OAAZ,UACI,cAAC/C,EAAA,EAAD,CACAC,QAAQ,oBACRzG,KAAK,SACLqG,SAAiB,KAAPjG,EAHV,wBAQX2C,EAASyG,EAAWtB,KAAI,SAAC1E,GAEvB,OAAiC,IAA9BT,EAASS,GAAWe,QACZ,cAAC,GAAD,CAEPpD,MAAOqC,EACPJ,QAASL,EAASS,IAFbA,GAME,QAEX,mCC9CAiG,OARf,WACI,OACI,8BACI,oBAAIzC,MAAO,CAACM,MAAM,qBAAlB,8BCoGGoC,mBAAWlF,aAP1B,WAAgDC,GAAQ,IAA7BjC,EAA4B,EAA5BA,WACvB,OADmD,EAAhBzC,MAC5B,CACHQ,KAAMiC,EACNrB,MAAO,KAIWqD,EA1F1B,YAAgD,IAA1BjE,EAAyB,EAAzBA,KAAMhB,EAAmB,EAAnBA,SAAU4B,EAAS,EAATA,MAAS,EAETuD,oBAAS,GAFA,mBAEpCkC,EAFoC,KAEzBC,EAFyB,KAGnClF,EAAWwG,cAAXxG,OAmBR,OAjBAsG,qBAAU,WACN1I,EAAS+C,EAAeX,IACpBpB,GAAQhB,EAASuD,EAAoBnB,OAezCpB,GAAQA,EAAKC,KAAuB,IAAjBD,EAAKgE,QAEpB,sBAAKwC,UAAU,YAAf,UACI,eAACD,GAAA,EAAD,CAAMC,UAAU,uBAAhB,UACI,eAACD,GAAA,EAAKrB,KAAN,WACI,eAACqB,GAAA,EAAKtB,MAAN,eAAcjF,EAAOA,EAAKJ,MAAQ,KAC9B,gCACI,wBAAQuG,QAAS,kBAAMG,GAAa,IAAOE,UAAU,SAArD,SACI,eAACE,EAAA,EAAD,CAAOR,QAAQ,UAAUO,MAAO,CAAEE,OAAQ,GAA1C,kBACS,cAAC,KAAD,SAGb,wBAAQR,QAxBf,WACjBnH,EAASmC,EAAenB,EAAKC,GAAIW,KAuBsB4F,UAAU,SAAzC,SACI,eAACE,EAAA,EAAD,CAAOR,QAAQ,SAASO,MAAO,CAAEE,OAAQ,GAAzC,oBACW,cAAC,KAAD,eAKvB,eAACJ,GAAA,EAAKK,SAAN,sBAAwB5G,EAAOA,EAAKF,OAAS,QAC7C,8BACI,cAAC4G,EAAA,EAAD,CAAOR,QAAQ,UAAf,SAA0BlG,EAAOA,EAAKD,SAAW,SAEpDC,EAAOA,EAAKH,KAAO,KACpB,sBAAK4G,MAAO,CAAEK,UAAW,IAAzB,UACI,sBAAMN,UAAU,YAAhB,SACI,cAAC,IAAD,CAAUC,MAAO,CAAEM,MAAO,QAASC,cAAe,GAAIC,SAAU,IAAMd,QAlC7E,WACjBnH,EAAS+B,EAAaH,EAAO,CAAEI,OAAQ,UAAYhB,SAmC/B,gCAAMA,EAAOA,EAAKkH,UAAY,KAC1B,sBAAMT,MAAO,CAAEU,WAAY,EAAGF,SAAU,IAAxC,sBAEJ,sBAAMT,UAAU,YAAhB,SACI,cAAC,IAAD,CAAYC,MAAO,CAAEM,MAAO,MAAOD,WAAY,GAAIG,SAAU,IAAMd,QArCxE,WACnBnH,EAAS+B,EAAaH,EAAO,CAAEI,OAAQ,YAAchB,YAuCrC,yBAAQwG,UAAU,oBAAoBC,MAAO,CAAEK,UAAW,GAA1D,UACY,KACR,8BAAI9G,EAAOA,EAAKoH,aAAe,KAA/B,oBAGR,cAAC,GAAD,CACItH,OAAQE,EAAOA,EAAKF,OAAS,KAC7B8C,SAAU5C,EAAOA,EAAKC,GAAK,UAKnC,cAAC,GAAD,CACIoH,KAAMhB,EACNf,OAAQ,kBAAMgB,GAAa,IAC3BtG,KAAMA,GAAc,KACpBY,MAAOA,OAKZ,cAAC,GAAD,QChFAwI,OATf,WACI,OACI,qBAAK5C,UAAU,eAAf,SACI,6CC4BGvC,sBAzBf,SAAaC,GAMX,OAJAwD,qBAAU,WACRxD,EAAMlF,SAAS2C,QAIf,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0H,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACE,cAAC,GAAD,eCfKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvK,MAAK,YAAkD,IAA/CwK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIRO,I,MAAQC,YAAYC,EAASC,YAAgBC,OAEnDC,IAASC,OAEL,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAINO,SAASC,eAAe,SAM1BhB,O","file":"static/js/main.1b7aca7b.chunk.js","sourcesContent":["\r\nconst PORT=process.env.PORT || 5000\r\nconst api=``\r\n\r\nlet token =localStorage.token\r\n\r\nif(!token){\r\n    token=localStorage.token=Math.random().toString(36).substr(-8)\r\n}\r\n\r\n\r\nconst headers={\r\n    headers:{\r\n        'Accept': 'application/json',\r\n        'Authorization':token\r\n    }\r\n}\r\n\r\nexport const getPosts =()=>fetch(`/posts`,headers)\r\n                    .then(res=>res.json())\r\n                    .then(data=>data)\r\n                    .catch(err=>err)\r\n\r\nexport const getCategoryAPI=()=>fetch(`${api}/categories`,headers)\r\n                                    .then(res=>res.json())\r\n                                    .then(categories=>categories)\r\n                                    .catch(err=>err)\r\n\r\nexport const addNewPostAPI=(post)=>fetch(`${api}/posts`,  \r\n    {  method:'POST',\r\n        headers:{\r\n        'Authorization':token,\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify(post)\r\n    }\r\n).then(res=>res.json())\r\n .then(post=>post)\r\n .catch(err=>alert('Please try again ',err))\r\n\r\n export const editPostAPI=(post)=>fetch(`${api}/posts/${post.id}`,  \r\n {  method:'PUT',\r\n     headers:{\r\n     'Authorization':token,\r\n     'Content-Type': 'application/json'\r\n     },\r\n     body:JSON.stringify(post)\r\n }\r\n).then(res=>res.json())\r\n.then(post=>post)\r\n.catch(err=>alert('Please try again ',err))\r\n\r\nexport const votingAPI=(option,post)=>fetch(`${api}/posts/${post.id}`,  \r\n {  method:'POST',\r\n     headers:{\r\n     'Authorization':token,\r\n     'Content-Type': 'application/json'\r\n     },\r\n     body:JSON.stringify(option),\r\n }\r\n).then(res=>res.json())\r\n.then(post=>post)\r\n.catch(err=>alert('Please try again ',err))\r\n\r\n export const deletePostAPI=(postId)=>fetch(`${api}/posts/${postId}`,  \r\n {  method:'DELETE',\r\n     headers:{\r\n     'Authorization':token,\r\n     'Content-Type': 'application/json'\r\n     },\r\n }\r\n).then(res=>res.json())\r\n.then(post=>post)\r\n.catch(err=>alert('Please try again ',err))\r\n\r\nexport const getPostCategoryAPI =(category)=>fetch(`${api}/${category}/posts`,headers)\r\n                    .then(res=>res.json())\r\n                    .then(data=>data)\r\n                    .catch(err=>err)\r\n\r\n\r\nexport const postDetailAPI=(postId)=>fetch(`${api}/posts/${postId}`,headers)\r\n                    .then(res=>res.json())\r\n                    .then(post=>post)\r\n                    .catch(err=>err)\r\n\r\nexport const getCommentsAPI=(postId)=>fetch(`${api}/posts/${postId}/comments`,headers)\r\n                                .then(res=>res.json())\r\n                                .then(comments=>comments)\r\n                                .catch(err=>err)\r\n\r\n\r\n\r\nexport const addNewCommentAPI=(comment)=>fetch(`${api}/comments`,{\r\n    method:'POST',\r\n    headers:{\r\n        'Authorization':token,\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body:JSON.stringify(comment)\r\n}).then(res=>res.json())\r\n  .then(comment=>comment)\r\n  .catch(err=>err)\r\n\r\n\r\nexport const deleteCommentAPI=(commentId)=>fetch(`${api}/comments/${commentId}`,{\r\n    method:'DELETE',\r\n    headers:{\r\n        'Authorization':token,\r\n        'Content-Type': 'application/json'\r\n    },  \r\n}).then(res=>res.json())\r\n  .then(comment=>comment)\r\n  .catch(err=>err)\r\n\r\n\r\n\r\nexport const voteCommentAPI=(option,commentId)=>fetch(`${api}/comments/${commentId}`,{\r\n    method:'POST',\r\n    headers:{\r\n        'Authorization':token,\r\n        'Content-Type': 'application/json'\r\n    }, \r\n    body:JSON.stringify(option) \r\n}).then(res=>res.json())\r\n  .then(comment=>comment)\r\n  .catch(err=>err)\r\n\r\n\r\n\r\nexport const editCommentAPI=(comment,commentId)=>fetch(`${api}/comments/${commentId}`,{\r\n    method:'PUT',\r\n    headers:{\r\n        'Authorization':token,\r\n        'Content-Type': 'application/json'\r\n    }, \r\n    body:JSON.stringify(comment) \r\n}).then(res=>res.json())\r\n  .then(comment=>comment)\r\n  .catch(err=>err)\r\n","\r\n\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  \r\n\r\nexport const postFormat=(title,body,author,category)=>{\r\n\r\n   const id= uuidv4()\r\n   const timestamp=Date.now()\r\n\r\n\r\n    return {\r\n        id,\r\n        timestamp,\r\n        title,\r\n        body,\r\n        author,\r\n        category\r\n    }\r\n}\r\n\r\n\r\nexport const commentFormat=(body,author,parentId)=>{\r\n\r\n  const id=uuidv4()\r\n  const timestamp=Date.now()\r\n\r\n  return{\r\n    id,\r\n    timestamp,\r\n    body,\r\n    author,\r\n    parentId\r\n  }\r\n}\r\n","import {getPosts,\r\n        addNewPostAPI, \r\n        deletePostAPI, \r\n        editPostAPI,\r\n        votingAPI,\r\n        getPostCategoryAPI} from '../utils/api'\r\nimport {postFormat} from '../utils/helpers'\r\n\r\nexport const RECEIVE_POSTS='RECEIVE_POSTS'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const DELETE_POST='DELETE_POST'\r\nexport const EDIT_POST='EDIT_POST'\r\nexport const VOTE_POST='VOTE_POST'\r\nexport const CATEGORY_POSTS='CATEGORY_POSTS'\r\n\r\n\r\nfunction receivePost(posts){\r\n    return{\r\n        type:RECEIVE_POSTS,\r\n        posts\r\n    }\r\n}\r\n\r\nfunction addPost(post){\r\n    return{\r\n        type:ADD_POST,\r\n        post\r\n    }\r\n}\r\n\r\nfunction editPost(post,index){\r\n    return{\r\n        type:EDIT_POST,\r\n        index,\r\n        post\r\n    }\r\n}\r\n\r\nfunction votePost(index,post){\r\n    return{\r\n        type:VOTE_POST,\r\n        index,\r\n        post\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction deletePost(post,index){\r\n    return{\r\n        type:DELETE_POST,\r\n        post,\r\n        index\r\n    }\r\n}\r\n\r\nfunction categoryPosts(posts){\r\n    return{\r\n        type:CATEGORY_POSTS,\r\n        posts\r\n    }\r\n}\r\n\r\n\r\nexport function receivePostData(){\r\n    return (dispatch)=>{\r\n        getPosts()\r\n        .then((posts)=>{ dispatch(receivePost(posts))\r\n        })\r\n    }\r\n}\r\n\r\nexport function addPostData(title,body,author,category){\r\n    return (dispatch)=>{\r\n        addNewPostAPI(postFormat(title,body,author,category))\r\n        .then((post)=>{dispatch(addPost(post))\r\n        })\r\n    }\r\n}\r\n\r\nexport function editPostData(post,index){\r\n    return (dispatch)=>{\r\n        editPostAPI(post)\r\n        .then((post)=>{ dispatch(editPost(post,index))\r\n        })\r\n    }\r\n}\r\n\r\nexport function votePostData(index,option,post){\r\n    return (dispatch)=>{\r\n        votingAPI(option,post)\r\n        .then((post)=>{\r\n            dispatch(votePost(index,post))\r\n        })\r\n    }\r\n}\r\n\r\nexport function deletePostData(postId,index){\r\n    return (dispatch)=>{\r\n        deletePostAPI(postId)\r\n        .then((post)=>{ dispatch(deletePost(post,index))\r\n        })\r\n    }\r\n}\r\n\r\nexport function categoryPostsData(category){\r\n    return (dispatch)=>{\r\n        getPostCategoryAPI(category)\r\n        .then((posts)=>{\r\n            dispatch(categoryPosts(posts))\r\n        })\r\n    }\r\n}","import {getCategoryAPI} from '../utils/api'\r\nexport const GET_CATEGORY='GET_CATEGORY'\r\n\r\n\r\n\r\nfunction getCategory(categories){\r\n    return{\r\n        type:GET_CATEGORY,\r\n        categories\r\n    }\r\n}\r\n\r\n\r\nexport function getCategoryData(){\r\n    return (dispatch)=>{\r\n           getCategoryAPI()\r\n           .then(categories=>{dispatch(getCategory(categories))})\r\n    }\r\n}","import { postDetailAPI } from \"../utils/api\"\r\n\r\nexport const POST_DETAIL='POST_DETAIL'\r\n\r\n\r\n\r\nfunction postDetail(post){\r\n    return{\r\n        type:POST_DETAIL,\r\n        post\r\n    }\r\n}\r\n\r\nexport function postDetailData(postId){\r\n    return (dispatch)=>{\r\n        postDetailAPI(postId)\r\n        .then((post)=>{dispatch(postDetail(post))})\r\n        .catch(err=>err)\r\n    }\r\n}","import { addNewCommentAPI, deleteCommentAPI, getCommentsAPI, voteCommentAPI,editCommentAPI } from \"../utils/api\"\r\nimport { commentFormat } from \"../utils/helpers\"\r\n\r\nexport const GET_COMMENTS='GET_COMMENTS'\r\nexport const ADD_COMMENT='ADD_COMMENT'\r\nexport const VOTE_COMMENT='VOTE_COMMENT'\r\nexport const EDIT_COMMENT='EDIT_COMMENT'\r\nexport const DELETE_COMMENT='DELETE_COMMENT'\r\n\r\n\r\nfunction receiveComments(comments){\r\n    return{\r\n        type:GET_COMMENTS,\r\n        comments\r\n    }\r\n}\r\n\r\nfunction addComment(comment){\r\n    return{\r\n        type:ADD_COMMENT,\r\n        comment\r\n    }\r\n}\r\n\r\nfunction voteComment(index,comment){\r\n    return{\r\n        type:VOTE_COMMENT,\r\n        index,\r\n        comment\r\n    }\r\n}\r\nfunction editComment(index,comment){\r\n    return{\r\n        type:EDIT_COMMENT,\r\n        index,\r\n        comment\r\n    }\r\n}\r\n\r\nfunction deleteComment(index,comment){\r\n    return{\r\n        type:DELETE_COMMENT,\r\n        index,\r\n        comment\r\n    }\r\n\r\n}\r\n\r\nexport function receiveCommentsData(postId){\r\n    return (dispatch)=>{\r\n        getCommentsAPI(postId)\r\n        .then((comments)=>{dispatch(receiveComments(comments))})\r\n    }\r\n}\r\n\r\nexport function addCommentData(body,author,parentId){\r\n    return (dispatch)=>{\r\n        addNewCommentAPI(commentFormat(body,author,parentId))\r\n        .then((comment)=>{dispatch(addComment(comment))})\r\n    }\r\n}\r\n\r\nexport function voteCommentData(index,option,commentId){\r\n    return(dispatch)=>{\r\n        voteCommentAPI(option,commentId)\r\n        .then((comment)=>{dispatch(voteComment(index,comment))})\r\n    }\r\n}\r\n\r\nexport function editCommentData(index,comment,commentId){\r\n    return (dispatch)=>{\r\n        editCommentAPI(comment,commentId)\r\n        .then((comment)=>{ dispatch(editComment(index,comment))\r\n        })\r\n    }\r\n}\r\n\r\nexport function deleteCommentData(index,commentId){\r\n    return (dispatch)=>{\r\n        deleteCommentAPI(commentId)\r\n        .then((comment)=>{dispatch(deleteComment(index,comment))})\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport posts from './post'\r\nimport categories from './category'\r\nimport postDetail from './postDetail'\r\nimport comments from './comment'\r\n\r\n\r\nexport default combineReducers({\r\n    posts,\r\n    categories,\r\n    postDetail,\r\n    comments\r\n})","import {ADD_POST, CATEGORY_POSTS, DELETE_POST, EDIT_POST, RECEIVE_POSTS, VOTE_POST} from '../actions/post'\r\n\r\n\r\nexport default function posts(state={},action){\r\n    switch(action.type){\r\n        case RECEIVE_POSTS:\r\n            return{\r\n                ...action.posts\r\n            }\r\n        case ADD_POST:\r\n            let index=Object.keys(state).length\r\n            return {\r\n                ...state,\r\n                [index]:{\r\n                    ...action.post\r\n                }\r\n            }\r\n        case VOTE_POST:\r\n            return{\r\n                ...state,\r\n                [action.index]:{\r\n                    ...action.post\r\n                }\r\n            }\r\n        case EDIT_POST:\r\n            return{\r\n                ...state,\r\n                [action.index]:{\r\n                    ...action.post\r\n                }\r\n            }\r\n        case DELETE_POST:\r\n            return{\r\n                ...state,\r\n                [action.index]:{\r\n                    ...action.post,\r\n                    deleted:true,                \r\n                }\r\n            }\r\n        case CATEGORY_POSTS:{\r\n            return{\r\n                ...action.posts\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}","import {GET_CATEGORY} from '../actions/category'\r\n\r\n\r\n export default function categories(state={},action){\r\n    switch(action.type){\r\n        case GET_CATEGORY:\r\n            return{\r\n                ...action.categories\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {POST_DETAIL} from '../actions/postDetail'\r\n\r\nexport default function postDetail(state={},action){\r\n    switch(action.type){\r\n        case POST_DETAIL:\r\n            return{\r\n                ...action.post\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_COMMENT, DELETE_COMMENT, EDIT_COMMENT, GET_COMMENTS, VOTE_COMMENT } from \"../actions/comment\";\r\n\r\nexport default function comments (state={},action){\r\n\r\n    switch(action.type){\r\n        case GET_COMMENTS:\r\n            return{\r\n                ...action.comments\r\n            }\r\n        case ADD_COMMENT:\r\n            let index=Object.keys(state).length\r\n            return{\r\n                ...state,\r\n                [index]:{\r\n                    ...action.comment\r\n                }\r\n                \r\n            }\r\n        case VOTE_COMMENT:\r\n            return{\r\n                ...state,\r\n                [action.index]:{\r\n                    ...action.comment\r\n                }\r\n            }\r\n        case EDIT_COMMENT:\r\n            return{\r\n                ...state,\r\n                [action.index]:{\r\n                    ...action.comment\r\n                }\r\n            }\r\n        case DELETE_COMMENT:\r\n            return{\r\n                ...state,\r\n                [action.index]:{\r\n                    ...action.comment\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\nimport { addPostData, editPostData } from '../actions/post'\r\n\r\n\r\n\r\nfunction PostEditModal(props) {\r\n    const {post,index,dispatch}=props\r\n    const [values, setValues] = useState({\r\n        title: post?post.title:'',\r\n        body: post?post.body:'',\r\n        author: post?post.author:'',\r\n        category: post?post.category:'react',\r\n    })\r\n\r\n    const handleInputChange = (e) => {\r\n        e.persist()\r\n        const { name, value } = e.target\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        const {title,body,author,category}=values\r\n        if(post){\r\n            dispatch(editPostData({...post,body},index))\r\n        }\r\n        else{\r\n            dispatch(addPostData(title,body,author,category))\r\n        }\r\n  \r\n        setValues({\r\n            title: '',\r\n            body: '',\r\n            author: '',\r\n            category: 'react',\r\n        })\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby='contained-modal-title-vcenter'\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id='contained-modal-title-vcenter'>\r\n                    {post&&post.id ? 'Edit Post' : 'Add Post '}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId='exampleForm.ControlInput1'>\r\n                        <Form.Label>Post Title</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            name='title'\r\n                            value={values.title}\r\n                            placeholder='Title'\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={post}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n                        <Form.Label>post body</Form.Label>\r\n                        <Form.Control\r\n                            name='body'\r\n                            value={values.body}\r\n                            as='textarea'\r\n                            rows={3}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='exampleForm.ControlInput1'>\r\n                        <Form.Label>Post Author</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            name='author'\r\n                            value={values.author}\r\n                            placeholder='post By'\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={post}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='exampleForm.ControlSelect1'>\r\n                        <Form.Label>Select category</Form.Label>\r\n                        <Form.Control\r\n                            name='category'\r\n                            value={values.category}\r\n                            as='select'\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            disabled={post}\r\n                            >\r\n                            <option>react</option>\r\n                            <option>redux</option>\r\n                            <option>udacity</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button variant='primary' type='submit'>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={props.onHide} variant='secondary'>Close</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                \r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default connect()(PostEditModal)","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Badge, Card } from 'react-bootstrap'\r\nimport { AiFillEdit } from 'react-icons/ai'\r\nimport { BiDownvote, BiUpvote } from 'react-icons/bi'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport PostEditModal from './PostEditModal'\r\nimport '../App.css'\r\nimport { deletePostData, votePostData } from '../actions/post'\r\n\r\nfunction Post({ post, dispatch, index }) {\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deletePostData(post.id, index))\r\n    }\r\n\r\n    const handleUpVote = () => {\r\n        dispatch(votePostData(index, { option: 'upVote' }, post))\r\n    }\r\n    const handleDownVote = () => {\r\n        dispatch(votePostData(index, { option: 'downVote' }, post))\r\n    }\r\n\r\n    if (post && post.deleted !== true) {\r\n        return (\r\n            <>\r\n                <Card className='postContainer' style={{}}>\r\n\r\n                    <Card.Body>\r\n\r\n                        <Card.Title> {post ? post.title : null}\r\n                            <div>\r\n                                <button onClick={() => setModalShow(true)} className='button'>\r\n                                    <Badge variant=\"success\" style={{ margin: 5 }}>\r\n                                        Edit <AiFillEdit></AiFillEdit>\r\n                                    </Badge>\r\n                                </button>\r\n                                <button onClick={handleDelete} className='button'>\r\n                                    <Badge variant=\"danger\" style={{ margin: 5 }}>\r\n                                        Delete <MdDeleteForever></MdDeleteForever>\r\n                                    </Badge>\r\n                                </button>\r\n                            </div>\r\n                        </Card.Title>\r\n\r\n                        <Card.Subtitle>post by {post ? post.author : null}</Card.Subtitle>\r\n\r\n                        <div>\r\n                            <Badge variant='primary'>{post ? post.category : null}</Badge>\r\n                        </div>\r\n\r\n                        <Link to={`/${post.category}/${post.id}`} className='link'>\r\n                            {post ? post.body : null}\r\n                        </Link>\r\n\r\n                        <div style={{ marginTop: 10 }}>\r\n                            <span className='voteHover'>\r\n                                <BiUpvote style={{ color: 'green', marginBottom: -10, fontSize: 23 }} onClick={handleUpVote}></BiUpvote>\r\n                            </span>\r\n                            <div>{post ? post.voteScore : null}\r\n                                <span style={{ marginLeft: 5, fontSize: 15 }}>Votes</span>\r\n                            </div>\r\n                            <span className='voteHover'>\r\n                            <BiDownvote style={{ color: 'red', marginTop: -15, fontSize: 23 }}  onClick={handleDownVote}></BiDownvote>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <footer className=\"blockquote-footer\" style={{ marginTop: 5 }} >\r\n                            {post ? null : null}\r\n                            <Link to={`/${post.category}/${post.id}`} className='link'>\r\n                                <p>{post ? post.commentCount : null} Comments</p>\r\n                            </Link>\r\n                        </footer>\r\n\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n\r\n                <PostEditModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    post={post ? post : null}\r\n                    index={index}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ posts }, { postId }) {\r\n    const post = posts ? posts[postId] : null\r\n    return {\r\n        index: postId,\r\n        post\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post)","import React, { useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Post from './Post'\r\nimport '../App.css'\r\nimport { categoryPostsData, receivePostData } from '../actions/post'\r\n\r\nfunction Category({dispatch,category,postIds}){\r\n  \r\n    useEffect(()=>{\r\n        if(category){\r\n        dispatch(categoryPostsData(category))\r\n        }else{\r\n            dispatch(receivePostData())\r\n        }\r\n    },[category,dispatch])\r\n\r\n    return (\r\n        <ul className='liDecoration'>\r\n        {postIds.map((postId) => {\r\n            return (\r\n                <li key={postId} >   \r\n                    <Post postId={postId} />   \r\n                </li>\r\n            )\r\n        })}\r\n    </ul>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps({posts},{sort}) {\r\n    let postIds=[]\r\n    if(sort==='vote score'){\r\n        postIds=(Object.keys(posts)\r\n        .sort((a,b)=>posts[b].voteScore-posts[a].voteScore))\r\n    }else{\r\n       postIds=Object.keys(posts)\r\n      .sort((a,b)=>posts[b].timestamp - posts[a].timestamp)\r\n    }\r\n    return {\r\n        postIds,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Category)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link,useParams} from 'react-router-dom'\r\nimport { Dropdown, DropdownButton, Badge,ButtonGroup } from 'react-bootstrap'\r\nimport { BiCommentAdd } from 'react-icons/bi'\r\nimport PostEditModal from './PostEditModal'\r\nimport '../App.css'\r\nimport Category from './Category'\r\n\r\nfunction Dashboard({categories}) {\r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const {category}=useParams()\r\n    const [sort,setSort]=useState('date')\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='filterContainer'>\r\n                <DropdownButton id=\"dropdown-item-button\"\r\n                     as={ButtonGroup}\r\n                    title={`Caterogy ${category?category:'all'}`}\r\n                    >\r\n                    <Dropdown.Item  eventKey='all' > \r\n                        <Link to='/' className='link'>\r\n                        All \r\n                        </Link>\r\n                    </Dropdown.Item>\r\n                    {categories && categories.categories ? categories.categories.map((category) => {\r\n                        return (\r\n                            <Link to={`/${category.name}`} className='link' key={category.name}>\r\n                            <Dropdown.Item \r\n                                \r\n                                as=\"button\"\r\n                                eventKey={category.name}\r\n                            >\r\n                                \r\n                                    {category.name}\r\n                               \r\n                            </Dropdown.Item>\r\n                            </Link>\r\n                        )\r\n                    }) : null\r\n                    }\r\n\r\n                </DropdownButton>\r\n                <DropdownButton \r\n                    id=\"dropdown-item-button\"\r\n                    className='categorySpace'\r\n                    title={`Sort by ${sort}`}\r\n                    onSelect={(e)=>setSort(e)}\r\n                    >\r\n                    <Dropdown.Item as=\"button\" eventKey='date'>date</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\" eventKey='vote score'>vote score</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n            <button onClick={() => setModalShow(true)} className='addPost'>\r\n                <Badge \r\n                variant=\"success\" \r\n                style={{\r\n                     margin: 5,\r\n                     width:130,\r\n                     height:35,\r\n                     fontSize:15,\r\n                      }}>\r\n                    Add a post <BiCommentAdd></BiCommentAdd>\r\n                </Badge>\r\n            </button>\r\n            <PostEditModal\r\n            show={modalShow}\r\n            onHide={()=>setModalShow(false)}\r\n            />\r\n            <Category\r\n            category={category}\r\n            sort={sort}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps({ posts, categories }) {\r\n    return {\r\n        categories,\r\n        posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Card, InputGroup, Button, FormControl, Form } from 'react-bootstrap'\r\nimport { BiDownvote, BiUpvote } from 'react-icons/bi'\r\nimport { AiFillEdit } from 'react-icons/ai'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport '../comment.css'\r\nimport { voteCommentData, deleteCommentData, editCommentData } from '../actions/comment'\r\n\r\n\r\nfunction CommentDetail({ index, comment, dispatch }) {\r\n\r\n    const [toggleEditComment, setToggleEditComment] = useState(false)\r\n    const [body, setBody] = useState(comment.body)\r\n\r\n\r\n    const handleChange = (e) => {\r\n        e.persist()\r\n        setBody(e.target.value)\r\n    }\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(editCommentData(index, { ...comment, body }, comment.id))\r\n        setToggleEditComment(false)\r\n    }\r\n\r\n    const handleUpVote = (index, commentId) => {\r\n        dispatch(voteCommentData(index, { option: 'upVote' }, commentId))\r\n    }\r\n\r\n    const handleDownVote = (index, commentId) => {\r\n        dispatch(voteCommentData(index, { option: 'downVote' }, commentId))\r\n    }\r\n\r\n    const handleDelete = (index, commentId) => {\r\n        dispatch(deleteCommentData(index, commentId))\r\n    }\r\n\r\n    return (\r\n        <Card.Body key={comment.id}>\r\n            <Card.Subtitle>\r\n                Comment By {comment.author}\r\n                <span>\r\n                    <button onClick={() => setToggleEditComment(true)} className='button'><AiFillEdit /></button>\r\n                </span>\r\n                <span>\r\n                    <button onClick={() => handleDelete(index, comment.id)} className='button'><MdDeleteForever /></button>\r\n                </span>\r\n            </Card.Subtitle>\r\n            <div className='comment__display'>\r\n                <div>\r\n                    <span className='voteHover'>\r\n                        <BiUpvote\r\n                            style={{ color: 'green', marginBottom: -10 }}\r\n                            onClick={() => { handleUpVote(index, comment.id) }}\r\n                        />\r\n                    </span>\r\n                    <div>{comment.voteScore}\r\n                        <span style={{ marginLeft: 5, fontSize: 15 }}>Votes</span>\r\n                    </div>\r\n                    <span className='voteHover'>\r\n                        <BiDownvote\r\n                            style={{ color: 'red', marginTop: -15 }}\r\n                            onClick={() => { handleDownVote(index, comment.id) }}\r\n                        />\r\n                    </span>\r\n                </div>\r\n                <div className={toggleEditComment ? '' : 'comment__text'}>\r\n                    <p>\r\n                        {toggleEditComment ? (\r\n                            <Form onSubmit={handleEditSubmit} className='commentEditForm'>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <FormControl\r\n                                        placeholder=\"Edit your comment\"\r\n                                        aria-label=\"Edit your comment\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                        value={body}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                        <Button variant=\"outline-secondary\" type='submit'>Edit</Button>\r\n                                        <Button variant=\"outline-secondary\" onClick={() => setToggleEditComment(false)}>cancel</Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Form>\r\n                        ) : comment.body}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Card.Body>\r\n    )\r\n\r\n}\r\n\r\nexport default connect()(CommentDetail)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Card, InputGroup, Button, FormControl, Form } from 'react-bootstrap'\r\nimport '../comment.css'\r\nimport { addCommentData } from '../actions/comment'\r\nimport CommentDetail from './CommentDetail'\r\n\r\n\r\nfunction Comment({author,parentId, comments,commentIds,dispatch }) {\r\n\r\n    const [body,setBody]=useState('')\r\n    \r\n\r\n    const handleChange=(e)=>{\r\n        e.persist()\r\n        setBody(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        dispatch(addCommentData(body,author,parentId))\r\n        setBody('')\r\n    }\r\n    return (\r\n        <Card className='commentContainer'>\r\n            <Card.Title style={{margin:6}}> Comments</Card.Title>\r\n            <Form onSubmit={handleSubmit} className='commentAddForm'>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Add your comment\"\r\n                        aria-label=\"Add your comment\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        value={body}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button \r\n                        variant=\"outline-secondary\" \r\n                        type='submit'\r\n                        disabled={body===''}\r\n                        >Add</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </Form>\r\n            {comments?commentIds.map((commentId) => {\r\n                //commentId here is the index\r\n               if(comments[commentId].deleted!==true){\r\n                  return( <CommentDetail \r\n                   key={commentId}\r\n                   index={commentId}\r\n                   comment={comments[commentId]}/>\r\n                  )\r\n               }\r\n               else{\r\n                   return null\r\n               }\r\n            }):<></>\r\n            }\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps({ comments },{parentId,author}) {\r\n    const commentIds=Object.keys(comments)\r\n    return {\r\n        author,\r\n        parentId,\r\n        commentIds,\r\n        comments\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comment)","import React from 'react'\r\n\r\nfunction NotFound(){\r\n    return(\r\n        <div>\r\n            <h1 style={{color:'rgb(38, 100, 233)'}}>404 Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React, { useEffect, useState } from 'react'\r\nimport { useParams, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Badge, Card } from 'react-bootstrap'\r\nimport { AiFillEdit } from 'react-icons/ai'\r\nimport { BiDownvote, BiUpvote } from 'react-icons/bi'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport { deletePostData, votePostData } from '../actions/post'\r\nimport PostEditModal from './PostEditModal'\r\nimport Comment from './Comment'\r\nimport NotFound from './NotFound'\r\nimport { receiveCommentsData } from '../actions/comment'\r\nimport { postDetailData } from '../actions/postDetail'\r\n\r\n\r\nfunction PostDetail({ post, dispatch, index }) {\r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    const { postId } = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch(postDetailData(postId))\r\n        if (post) { dispatch(receiveCommentsData(postId)) }\r\n    })\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deletePostData(post.id, index))\r\n    }\r\n\r\n    const handleUpVote = () => {\r\n        dispatch(votePostData(index, { option: 'upVote' }, post))\r\n    }\r\n    const handleDownVote = () => {\r\n        dispatch(votePostData(index, { option: 'downVote' }, post))\r\n    }\r\n\r\n\r\n    if (post && post.id && post.deleted !== true) {\r\n        return (\r\n            <div className='container'>\r\n                <Card className='postCommentContainer'>\r\n                    <Card.Body>\r\n                        <Card.Title> {post ? post.title : null}\r\n                            <div>\r\n                                <button onClick={() => setModalShow(true)} className='button'>\r\n                                    <Badge variant=\"success\" style={{ margin: 5 }}>\r\n                                        Edit <AiFillEdit></AiFillEdit>\r\n                                    </Badge>\r\n                                </button>\r\n                                <button onClick={handleDelete} className='button'>\r\n                                    <Badge variant=\"danger\" style={{ margin: 5 }}>\r\n                                        Delete <MdDeleteForever></MdDeleteForever>\r\n                                    </Badge>\r\n                                </button>\r\n                            </div>\r\n                        </Card.Title>\r\n                        <Card.Subtitle>post by {post ? post.author : null}</Card.Subtitle>\r\n                        <div>\r\n                            <Badge variant='primary'>{post ? post.category : null}</Badge>\r\n                        </div>\r\n                        {post ? post.body : null}\r\n                        <div style={{ marginTop: 10 }}>\r\n                            <span className='voteHover'>\r\n                                <BiUpvote style={{ color: 'green', marginBottom: -10, fontSize: 23 }} onClick={handleUpVote}></BiUpvote>\r\n                            </span>\r\n                            <div>{post ? post.voteScore : null}\r\n                                <span style={{ marginLeft: 5, fontSize: 15 }}>Votes</span>\r\n                            </div>\r\n                            <span className='voteHover'>\r\n                                <BiDownvote style={{ color: 'red', marginTop: -15, fontSize: 23 }} onClick={handleDownVote}></BiDownvote>\r\n                            </span>\r\n                        </div>\r\n                        <footer className=\"blockquote-footer\" style={{ marginTop: 5 }} >\r\n                            {post ? null : null}\r\n                            <p>{post ? post.commentCount : null} Comment</p>\r\n                        </footer>\r\n                    </Card.Body>\r\n                    <Comment\r\n                        author={post ? post.author : null}\r\n                        parentId={post ? post.id : null}\r\n                    />\r\n                </Card>\r\n\r\n\r\n                <PostEditModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    post={post ? post : null}\r\n                    index={index}\r\n                />\r\n            </div>\r\n        )\r\n    } else {\r\n        return <NotFound />\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ postDetail, posts }, props) {\r\n    return {\r\n        post: postDetail,\r\n        index: 0\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(PostDetail))","import React from 'react'\r\nimport {} from 'react-bootstrap'\r\nimport '../App.css'\r\n\r\nfunction Nav(){\r\n    return(\r\n        <div className='navContainer'>\r\n            <h1>Readable</h1>    \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav","import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {Route,Switch} from 'react-router-dom'\nimport { getCategoryData } from './actions/category'\nimport './App.css'\nimport Dashboard from './components/Dashboard'\nimport PostDetail from './components/PostDetail'\nimport Nav from './components/Nav'\n\n\nfunction App(props) {\n\n  useEffect(()=>{\n    props.dispatch(getCategoryData())\n  })\n  \n  return (\n    <>\n      <Nav/>\n      <Switch>\n        <Route exact path='/'>\n          <Dashboard/>\n        </Route>\n        <Route exact path='/:category'>\n          <Dashboard/>\n        </Route> \n        <Route path='/:category/:postId'>\n          <PostDetail />\n        </Route>\n      </Switch>\n    </>\n  )\n}\n\n\nexport default connect()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}